services:
  server:
    container_name: "server"
    build: "./server"
    restart: "always"
    env_file: mongodb/mongodb.env
    volumes:
      - ./config.json:/server/config.json
      - ./feeds.json:/server/feeds.json
      - ./mongodb/mongodb.env:/server/mongodb/mongodb.env
      - server_zip:/server/zip
      - server_gtfs:/server/gtfs
      - server_geojson:/server/geojson
      - martin_tiles:/server/tiles
      - /var/run/docker.sock:/var/run/docker.sock # Para poder acceder a docker desde dentro del contenedor
    networks:
      - red_interna
    depends_on:
      - mongodb
      - martin
  nginx:
    image: "nginx:1.25.2-alpine"
    container_name: "nginx"
    restart: "always"
    ports:
      - 80:80
      - 443:443
      - 27017:27017 # Para poder acceder a mongodb mientras se desarrolla
    volumes:
      - ./nginx/nginx-ip.conf:/etc/nginx/nginx.conf
    depends_on:
      - martin
      - api
      - web-app
    networks:
      - red_interna
  martin:
    container_name: "martin"
    command:
    - "/tiles"
    image: "ghcr.io/maplibre/martin:main"
    restart: "always"
    ports:
    - "3000"
    volumes:
    - "martin_tiles:/tiles"
    networks:
      - red_interna
  mongodb:
    container_name: "mongodb"
    image: "mongodb/mongodb-community-server:latest"
    ports:
      - "27017"
    restart: "always"
    env_file: mongodb/mongodb.env
    volumes:
      - mongodatabase:/data/db
      - ./mongodb/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    networks:
      - red_interna
  api:
    container_name: "api"
    build: "./api"
    restart: "always"
    env_file: mongodb/mongodb.env
    ports:
      - "8081"
    networks:
      - red_interna
    depends_on:
      - mongodb
  web-app:
    container_name: "webapp"
    build: "./web"
    restart: "always"
    ports:
      - "8080"
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - red_interna
volumes:
  mongodatabase:
    name: mongodatabase
  martin_tiles:
    name: martin_tiles
  server_zip:
    name: server_zip
  server_gtfs:
    name: server_gtfs
  server_geojson:
    name: server_geojson
networks:
  red_interna:
    driver: bridge
version: '3.7'